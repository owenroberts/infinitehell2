class Camera{constructor(){this.view=[0,0,gme.width,gme.height],this.zoom=1,this.center=[0,0],this.focus=[0,0],this.state="view",this.lerp={center:[0,0],focus:[0,0],speed:8,threshold:.05},this.waitToSet=!1}lerpToPlayer(){"view"==this.state&&(this.lerp.center=[...this.center],this.lerp.focus=[...this.focus],this.state="lerp")}update(){if("lerp"===this.state){let e=-player.x-player.halfWidth,t=-player.y-player.halfHeight,s=[(e-this.lerp.center[0])/this.lerp.speed,(t-this.lerp.center[1])/this.lerp.speed];this.lerp.center[0]+=s[0],this.lerp.center[1]+=s[1];let i=[(gme.halfWidth-this.lerp.focus[0])/this.lerp.speed,(gme.halfHeight-this.lerp.focus[1])/this.lerp.speed];this.lerp.focus[0]+=i[0],this.lerp.focus[1]+=i[1],gme.ctx.translate(Math.floor(this.lerp.focus[0]),Math.floor(this.lerp.focus[1])),gme.ctx.scale(this.zoom,this.zoom),gme.ctx.translate(Math.floor(this.lerp.center[0]),Math.floor(this.lerp.center[1])),(Math.abs(s[0])<this.lerp.threshold||Math.abs(s[1])<this.lerp.threshold)&&(this.state="view",this.focus=[gme.halfWidth,gme.halfHeight],this.center=[-player.x-player.halfWidth,-player.y-player.halfHeight]),this.view[0]=-this.lerp.focus[0]-this.lerp.center[0],this.view[1]=-this.lerp.focus[1]-this.lerp.center[1]}else"player"===this.state?(gme.ctx.translate(gme.halfWidth,gme.halfHeight),gme.ctx.scale(this.zoom,this.zoom),gme.ctx.translate(-player.x-player.halfWidth,-player.y-player.halfHeight),this.view[0]=-gme.halfWidth+player.x+player.halfWidth,this.view[1]=-gme.halfHeight+player.y+player.halfHeight):"view"===this.state&&(gme.ctx.translate(this.focus[0],this.focus[1]),gme.ctx.scale(this.zoom,this.zoom),gme.ctx.translate(this.center[0],this.center[1]),this.view[0]=-this.focus[0]-this.center[0],this.view[1]=-this.focus[1]-this.center[1])}}const Constants={TILE_SIZE:64,HALF_TILE_SIZE:32,CELL_WIDTH:3,CELL_HEIGHT:1,GRID_WIDTH:3,GRID_HEIGHT:3};class HellSprite extends Sprite{constructor(e,t,s,i){super(e,t,s,i)}display(e){this.isOnScreen(e)&&(this.debug&&this.drawDebug(),this.animation&&(this.animation.update(),this.animation.draw(this.x,this.y,GAME.suspend))),this.displayFunc&&this.displayFunc()}isOnScreen(e){return this.debug,this.x+this.width>e[0]&&this.y+this.height>e[1]&&this.x<e[0]+e[2]&&this.y<e[1]+e[3]}}class HellTextureSprite extends Sprite{constructor(e,t){super(e.x,e.y,e.animation,t),this.center=!1,this.stateName=`frame-${e.stateIndex}`,this.animation.createNewState(`frame-${e.stateIndex}`,e.stateIndex,e.stateIndex)}display(e){this.animation.state=this.stateName,super.display(e)}}class Level{constructor(e,t,s,i,n){this.indexes=e,this.x=t,this.y=s,this.tiles=[],this.tilesAdded=!1,this.tilePositions=[],this.tileCount=0,this.levelType=n,s>gme.lowestLevel&&(gme.lowestLevel=s),this.width=Constants.TILE_SIZE*Constants.CELL_WIDTH*Constants.GRID_WIDTH,this.height=Constants.TILE_SIZE*Constants.CELL_HEIGHT*Constants.GRID_HEIGHT,this.trigger=physics.addTrigger(this.indexes,t+this.width/2,s,this.width,this.height,(()=>{if(this.indexes[0]!==gme.currentLevel[0]||this.indexes[1]!==gme.currentLevel[1]){camera.lerpToPlayer(),gme.currentLevel[0]=this.indexes[0],gme.currentLevel[1]=this.indexes[1];for(let e=0;e<gme.levels.length;e++){let t=gme.levels[e].indexes,s=Math.abs(t[0]-this.indexes[0]),i=Math.abs(t[1]-this.indexes[1]);(s>3||i>3)&&gme.levels[e].remove()}this.addLevels(3)}})),gme.levels.push(this),i>=2&&this.addPlatforms(n),i>=1&&this.addLevels(i)}updateTiles(){if(this.tileCount===this.tilePositions.length)return;let[e,t]=this.tilePositions[this.tileCount];this.tiles.push(physics.addBody(e,t,Constants.TILE_SIZE)),this.tileCount++}addPlatforms(e){if(this.tilesAdded)return;this.tilesAdded=!0;let{x:t,y:s}=this;e||((e="000000000".split(""))[Cool.randomInt(9)]="1",e[Cool.randomInt(9)]="1",e=e.join(""));for(let i=0;i<9;i++)if(+e.charAt(i)){let e=i%3*Constants.TILE_SIZE*Constants.CELL_WIDTH+Constants.HALF_TILE_SIZE,n=Math.floor(i/3)*Constants.TILE_SIZE*Constants.CELL_HEIGHT-Constants.TILE_SIZE;this.tilePositions.push([t+e,s+n]),this.tilePositions.push([t+e+Constants.TILE_SIZE,s+n]),this.tilePositions.push([t+e+2*Constants.TILE_SIZE,s+n])}}addLevel(e,t){let s=gme.levels.filter((t=>t.indexes[0]===e[0]&&t.indexes[1]===e[1]));if(s.length)return void(t>=1&&s.forEach((e=>{0===e.tiles.length&&e.addPlatforms()})));let i=this.width*e[0],n=this.height*e[1];new Level(e,i,n,t)}addLevels(e){e-=1;for(let t=1;t<=4;t++){let s=[this.indexes[0]+(t<=2?1:-1),this.indexes[1]+(t%2==0?1:-1)];this.addLevel(s,e)}}remove(){for(let e=0;e<this.tiles.length;e++)Composite.remove(physics.engine.world,this.tiles[e].body),gme.scenes.game.remove(this.tiles[e]);Composite.remove(physics.engine.world,this.trigger),gme.levels.splice(gme.levels.indexOf(this),1)}}class Physics{constructor(){this.display=!1,this.engine=Engine.create(),this.engine.gravity.y=2,this.defaultOptions={restitution:.1,friction:.05}}addBody(e,t,s){const i=new HellSprite(e,t,gme.anims.sprites.test_tile);return i.center=!0,gme.scenes.game.addSprite(i),i.body=Bodies.rectangle(Math.round(e),Math.round(t),s,s,{...this.defaultOptions,collisionFilter:{category:2,mask:1},isStatic:!0}),Composite.add(this.engine.world,i.body),i}addTrigger(e,t,s,i,n,l){const o=Bodies.rectangle(Math.round(t),Math.round(s),i,n,{isStatic:!0,isSensor:!0,collisionFilter:{category:4,mask:1}});return o.isTrigger=!0,o.levelIndex=e,o.callback=l,Composite.add(this.engine.world,o),o}render(){if(this.display){let e=gme.ctx.lineWidth,t=gme.ctx.strokeStyle;gme.ctx.lineWidth=1,gme.ctx.strokeStyle="#00dd22";const s=Composite.allBodies(this.engine.world);for(let e=0,t=s.length;e<t;e++){const t=s[e];gme.ctx.beginPath();for(let e=0,s=t.parts.length;e<s;e++){const s=t.parts[e];gme.ctx.moveTo(s.vertices[0].x,s.vertices[0].y);for(let e=1,t=s.vertices.length;e<t;e++)gme.ctx.lineTo(s.vertices[e].x,s.vertices[e].y);gme.ctx.lineTo(s.vertices[0].x,s.vertices[0].y)}gme.ctx.stroke()}gme.ctx.lineWidth=e,gme.ctx.strokeStyle=t}}}class Player extends HellSprite{constructor(e,t,s,i){super(e,t),this.mapPosition=[Math.round(e),Math.round(t)],this.center=!0,this.debug=i||!1,this.speed=[1,1],this.jumpSpeed=-24,this.jumpJustPressed=!1,this.isJumping=!1,this.jumpCount=0,this.jumpMax=2,this.addAnimation(s),this.animation.state="idle_right",this.direction=1,this.input={right:!1,up:!1,left:!1,down:!1,jump:!1},this.hasSFX=!1,this.setupPhysics(),this.halfWidth=this.width/2,this.halfHeight=this.height/2,console.log("player sprite",this)}setupPhysics(){let e=[];this.blocked={down:null,up:null,right:null,left:null},this.sensors={};let[t,s]=this.position,[i,n]=[64,64];this.sensors.down=Bodies.rectangle(t,s+n/2,i/2,10,{isSensor:!0}),e.push(this.sensors.down),e.push(Bodies.rectangle(t,s,i,n));const l={inertia:1/0,restitution:.25,friction:.05,parts:e,collisionFilter:{category:1}};this.body=Body.create(l),this.body.isPlayer=!0,Composite.add(physics.engine.world,this.body),console.log(this.body),Events.on(physics.engine,"afterUpdate",this.physicsUpdate.bind(this)),Events.on(physics.engine,"beforeUpdate",(e=>{this.blocked.down=!1})),Events.on(physics.engine,"collisionActive",(e=>{let t=e.pairs;for(let e=0,s=t.length;e<s;e++){let s=t[e];s.bodyA!==this.sensors.down&&s.bodyB!==this.sensors.down||s.bodyA.isTrigger||s.bodyB.isTrigger||(this.blocked.down=!0,player.landed||(player.landed=!0))}})),Events.on(physics.engine,"collisionStart",(e=>{if(!player.landed)return;let t=e.pairs;for(let e=0,s=t.length;e<s;e++){let s=t[e];s.bodyA.isTrigger&&s.bodyB.parent.isPlayer&&s.bodyA.callback(),s.bodyB.isTrigger&&s.bodyA.parent.isPlayer&&s.bodyB.callback()}}))}inputKey(e,t){this.input[e]=t}translatePosition(){return[-this.x-this.halfWidth,-this.y-this.halfHeight]}physicsUpdate(){this.blocked.down&&this.isJumping&&(this.isJumping=!1,this.jumpCount=0),this.input.jump?(this.jumpJustPressed||(this.blocked.down||this.jumpCount<this.jumpMax)&&(Body.setVelocity(this.body,{x:this.body.velocity.x,y:-12}),this.isJumping=!0,this.jumpCount++),this.jumpJustPressed=!0):this.jumpJustPressed=!1;let e=1==this.direction?"idle_right":"idle_left";!this.isJumping&&this.blocked.down||(e=1==this.direction?"jump_right":"jump_left"),this.input.right&&(Body.setVelocity(player.body,{x:3,y:player.body.velocity.y}),this.direction=1,this.isJumping||(e="right")),this.input.left&&(Body.setVelocity(player.body,{x:-3,y:player.body.velocity.y}),this.direction=-1,this.isJumping||(e="left")),this.position[0]=Math.round(this.body.position.x),this.position[1]=Math.round(this.body.position.y),this.animation.state=e,this.hasSFX&&this.playSFX(speed)}}class Scenery{constructor(){}setup(){let e=256;for(let t=0;t<gme.view.width;t+=e){let s=new HellTextureSprite({x:t+Cool.randomInt(-256,e),y:Cool.randomInt(0,100),animation:gme.anims.sprites.clouds,stateIndex:Cool.randomInt(0,gme.anims.sprites.clouds.endFrame)});gme.scenes.scenery.addToDisplay(s);let i=new HellTextureSprite({x:t+Cool.randomInt(-256,e),y:gme.view.height-64-Cool.randomInt(128),animation:gme.anims.sprites.fire,stateIndex:Cool.randomInt(0,gme.anims.sprites.fire.endFrame)});gme.scenes.scenery.addToDisplay(i);let n=new HellTextureSprite({x:t+Cool.randomInt(-256,e),y:gme.view.halfHeight-Cool.randomInt(-256,256),animation:gme.anims.sprites.land,stateIndex:Cool.randomInt(0,gme.anims.sprites.land.endFrame)});gme.scenes.scenery.addToDisplay(n)}}}const title=document.getElementById("title");function loadingAnimation(){let e="~"+title.textContent+"~";title.textContent=e}let loadingInterval=setInterval(loadingAnimation,1e3/12);const isMobile=Cool.mobilecheck();isMobile&&document.body.classList.add("mobile");const gme=new Game({dps:24,lineWidth:1,zoom:1,width:window.innerWidth,height:window.innerHeight,multiColor:!0,checkRetina:!0,suspend:!0,events:isMobile?["touch"]:["keyboard","mouse"],scenes:["game","splash","loading","scenery"],bounds:{left:-1024,top:1024,right:1024,bottom:1024}});gme.load({sprites:"data/sprites.json"},!1);const{Engine:Engine,Bodies:Bodies,Body:Body,Composite:Composite,Runner:Runner,Events:Events}=Matter;let player,firstLevel;gme.levels=[];let scenery=new Scenery,camera=new Camera,physics=new Physics;gme.start=function(){document.getElementById("splash").remove(),player=new Player(384,-512,gme.anims.sprites.player),player.landed=!1,gme.scenes.game.addSprite(player),camera.focus=[-256,gme.view.halfHeight],gme.levels=[],gme.currentLevel=[0,0],gme.lowestLevel=0,firstLevel=new Level([0,0],0,0,3,"000000111"),scenery.setup(),gme.scenes.current="game",Runner.run(physics.engine)},gme.draw=function(){for(let e=0;e<gme.levels.length;e++)gme.levels[e].updateTiles();gme.ctx.save(),gme.ctx.clearRect(0,0,gme.view.width,gme.view.height),gme.ctx.save(),gme.ctx.translate(player.x/50,player.y/50),gme.scenes.scenery.display(),gme.ctx.restore(),camera.update(),physics.render(),gme.scenes.current.display(camera.view),gme.ctx.restore(),player.y>gme.lowestLevel+gme.view.height&&gme.reset()},gme.reset=function(){for(let e=0;e<gme.levels.length;e++)gme.levels[e].remove();gme.levels=[],gme.currentLevel=[0,0],gme.lowestLevel=0,firstLevel=new Level([0,0],0,0,3,"000000111"),Body.setPosition(player.body,{x:384,y:-512}),Body.setVelocity(player.body,{x:0,y:0}),player.landed=!1,camera.center=[0,0],camera.focus=[-256,gme.view.halfHeight],camera.state="view"},gme.keyDown=function(e){switch(e){case"a":case"left":player.inputKey("left",!0);break;case"w":case"up":case"x":case"space":player.inputKey("jump",!0);break;case"d":case"right":player.inputKey("right",!0);break;case"g":case"h":break;case"t":physics.display=!physics.display,console.log("show physies",physics.display)}},gme.keyUp=function(e){switch(e){case"a":case"left":player.inputKey("left",!1);break;case"w":case"up":case"x":case"space":player.inputKey("jump",!1);break;case"d":case"right":player.inputKey("right",!1);break;case"s":case"down":player.inputKey("down",!1)}};
//# sourceMappingURL=src_maps/gme.min.js.map
